
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ClearanceRequestScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  overall_status: 'overall_status',
  createdAt: 'createdAt'
};

exports.Prisma.DepartmentClearanceStatusScalarFieldEnum = {
  id: 'id',
  clearance_request_id: 'clearance_request_id',
  department_id: 'department_id',
  status: 'status',
  comment: 'comment',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  full_name: 'full_name',
  email: 'email',
  password: 'password',
  role: 'role'
};

exports.Prisma.DepartmentOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.ClearanceRequestOrderByRelevanceFieldEnum = {
  overall_status: 'overall_status'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.DepartmentClearanceStatusOrderByRelevanceFieldEnum = {
  status: 'status',
  comment: 'comment'
};


exports.Prisma.ModelName = {
  User: 'User',
  Department: 'Department',
  ClearanceRequest: 'ClearanceRequest',
  DepartmentClearanceStatus: 'DepartmentClearanceStatus'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/tesfaye/clearance-portal/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/tesfaye/clearance-portal/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider          = \"mysql\"\n  url               = env(\"DATABASE_URL\")\n  shadowDatabaseUrl = env(\"SHADOW_DATABASE_URL\")\n}\n\nmodel User {\n  id                Int                @id @default(autoincrement())\n  full_name         String\n  email             String             @unique\n  password          String\n  role              String\n  createdAt         DateTime           @default(now())\n  clearanceRequests ClearanceRequest[] @relation(\"StudentClearances\")\n}\n\nmodel Department {\n  id                          Int                         @id @default(autoincrement())\n  name                        String                      @unique\n  departmentClearanceStatuses DepartmentClearanceStatus[]\n}\n\nmodel ClearanceRequest {\n  id                 Int                         @id @default(autoincrement())\n  student_id         Int\n  overall_status     String                      @default(\"Pending\")\n  createdAt          DateTime                    @default(now())\n  student            User                        @relation(\"StudentClearances\", fields: [student_id], references: [id])\n  departmentStatuses DepartmentClearanceStatus[]\n\n  @@index([student_id])\n}\n\nmodel DepartmentClearanceStatus {\n  id                   Int      @id @default(autoincrement())\n  clearance_request_id Int\n  department_id        Int\n  status               String   @default(\"Pending\")\n  comment              String? // optional\n  updated_at           DateTime @default(now()) @updatedAt\n\n  clearanceRequest ClearanceRequest @relation(fields: [clearance_request_id], references: [id])\n  department       Department       @relation(fields: [department_id], references: [id])\n\n  @@index([clearance_request_id])\n  @@index([department_id])\n}\n",
  "inlineSchemaHash": "9ba065396676a54d63f9d6a99fb2bcbae799a17accae4ec50400ead6eca787da",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"full_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clearanceRequests\",\"kind\":\"object\",\"type\":\"ClearanceRequest\",\"relationName\":\"StudentClearances\"}],\"dbName\":null},\"Department\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departmentClearanceStatuses\",\"kind\":\"object\",\"type\":\"DepartmentClearanceStatus\",\"relationName\":\"DepartmentToDepartmentClearanceStatus\"}],\"dbName\":null},\"ClearanceRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"student_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"overall_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StudentClearances\"},{\"name\":\"departmentStatuses\",\"kind\":\"object\",\"type\":\"DepartmentClearanceStatus\",\"relationName\":\"ClearanceRequestToDepartmentClearanceStatus\"}],\"dbName\":null},\"DepartmentClearanceStatus\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clearance_request_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"department_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clearanceRequest\",\"kind\":\"object\",\"type\":\"ClearanceRequest\",\"relationName\":\"ClearanceRequestToDepartmentClearanceStatus\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToDepartmentClearanceStatus\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

